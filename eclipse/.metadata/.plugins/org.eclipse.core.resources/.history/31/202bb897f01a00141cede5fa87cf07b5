package net.crystic.cryscraft;

//Imports
import net.crystic.cryscraft.blocks.MetalBlock;
import net.crystic.cryscraft.blocks.OreBlock;
import net.crystic.cryscraft.handler.CraftingHandler;
import net.crystic.cryscraft.handler.FuelHandler;
import net.crystic.cryscraft.items.*;
import net.crystic.cryscraft.items.IronPunch;
import net.crystic.cryscraft.worldgen.CrysCraftWorldGen;
import net.minecraft.block.Block;
import net.minecraft.block.material.Material;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.item.Item.ToolMaterial;
import net.minecraft.item.ItemStack;
import net.minecraftforge.common.util.EnumHelper;
import net.minecraftforge.oredict.OreDictionary;
import cpw.mods.fml.common.FMLCommonHandler;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.registry.GameRegistry;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;

@Mod(modid= CrysCraft.modid, version= CrysCraft.version)

public class CrysCraft {
		public static final String modid = "CrysCraft";
		public static final String version = "A0.1";

	//Creative Tab !!!Must be first!!!
		public static CreativeTabs crysCraftTab;
		
	//Tools
		public static ToolMaterial CopperMaterial = EnumHelper.addToolMaterial("CopperMaterial", 2, 750, 10.0F, 5.0F, 10);

	//World Gen
		CrysCraftWorldGen eventWorldGen = new CrysCraftWorldGen();
	
//Items
		public static Item itemCopperIngot;
		public static Item itemTinIngot;
		public static Item itemZincIngot;

	//Fuels
		public static Item itemTreePitch;
	
	//Durable Items
		public static Item itemIronDisk;
		public static Item itemIronWasher;
		public static Item itemIronHammer;
		public static Item itemIronPunch;
		
	//Tools
		public static Item itemCopperSword;
		public static Item itemCopperAxe;
		public static Item itemCopperShovel;
		public static Item itemCopperHoe;
		public static Item itemCopperPickaxe;
		
//Blocks
	//Normal Blocks
		public static Block blockCopperBlock;
		public static Block blockTinBlock;
		public static Block blockZincBlock;
	
	//Ores
		public static Block oreCopperOre;
		public static Block oreTinOre;
		public static Block oreZincOre;
		
	
	@EventHandler	
	public void PreInit(FMLPreInitializationEvent preEvent){

	//Creative Tab !!!Must be registered first!!!
		crysCraftTab = new CreativeTabs("CrysCraft") {
		@SideOnly(Side.CLIENT)
		public Item getTabIconItem() {
			return Item.getItemFromBlock(CrysCraft.oreCopperOre);
		}
	};
		
//Items
		itemCopperIngot = new CCItems().setUnlocalizedName("CopperIngot");
		GameRegistry.registerItem(itemCopperIngot, "CopperIngot");
		
		itemTinIngot = new CCItems().setUnlocalizedName("TinIngot");
		GameRegistry.registerItem(itemTinIngot, "TinIngot");
		
		itemZincIngot = new CCItems().setUnlocalizedName("ZincIngot");
		GameRegistry.registerItem(itemZincIngot, "ZincIngot");
	//Fuels
		itemTreePitch = new CCItems().setUnlocalizedName("TreePitch");
		GameRegistry.registerItem(itemTreePitch, "TreePitch");

	//Durable Items
		itemIronDisk = new CCItems().setUnlocalizedName("IronDisk");
		GameRegistry.registerItem(itemIronDisk, "IronDisk");
		
		itemIronWasher = new CCItems().setUnlocalizedName("IronWasher");
		GameRegistry.registerItem(itemIronWasher, "IronWasher");
		
		itemIronHammer = new IronHammer().setUnlocalizedName("IronHammer");
		GameRegistry.registerItem(itemIronHammer, "IronHammer");
		
		itemIronPunch = new IronPunch().setUnlocalizedName("IronPunch");
		GameRegistry.registerItem(itemIronPunch, "IronPunch");
	
	//Tools
		itemCopperSword = new CopperSword(CopperMaterial).setUnlocalizedName("CopperSword");
		GameRegistry.registerItem(itemCopperSword, "CopperSword");
		
		itemCopperAxe = new CopperAxe(CopperMaterial).setUnlocalizedName("CopperAxe");
		GameRegistry.registerItem(itemCopperAxe, "CopperAxe");
		
		itemCopperShovel = new CopperShovel(CopperMaterial).setUnlocalizedName("CopperShovel");
		GameRegistry.registerItem(itemCopperShovel, "CopperShovel");
		
		itemCopperHoe = new CopperHoe(CopperMaterial).setUnlocalizedName("CopperHoe");
		GameRegistry.registerItem(itemCopperHoe, "CopperHoe");
		
		itemCopperPickaxe = new CopperPickaxe(CopperMaterial).setUnlocalizedName("CopperPickaxe");
		GameRegistry.registerItem(itemCopperPickaxe, "CopperPickaxe");
		
//Blocks
	//Normal Blocks
		blockCopperBlock = new MetalBlock(Material.iron).setBlockName("CopperBlock");
		GameRegistry.registerBlock(blockCopperBlock, "CopperBlock");
		
		blockTinBlock = new MetalBlock(Material.iron).setBlockName("TinBlock");
		GameRegistry.registerBlock(blockTinBlock, "TinBlock");
		
		blockZincBlock = new MetalBlock(Material.iron).setBlockName("ZincBlock");
		GameRegistry.registerBlock(blockZincBlock, "ZincBlock");
		
	//Ores
		oreCopperOre = new OreBlock(Material.rock).setBlockName("CopperOre");
		GameRegistry.registerBlock(oreCopperOre, "CopperOre");
		
		oreTinOre = new OreBlock(Material.rock).setBlockName("TinOre");
		GameRegistry.registerBlock(oreTinOre, "TinOre");
		
		oreZincOre = new OreBlock(Material.rock).setBlockName("ZincOre");
		GameRegistry.registerBlock(oreZincOre, "ZincOre");
		
//World Gen
		GameRegistry.registerWorldGenerator(eventWorldGen, 0);
			
	}
	
	@EventHandler
	public void Init(FMLInitializationEvent event){
//Crafting Handler
		FMLCommonHandler.instance().bus().register(new CraftingHandler());
		
//Smelting Recipe
		//Output multiple: new ItemStack (itemExampleItem, X) X= Number of output.
		GameRegistry.addSmelting(oreCopperOre, new ItemStack (itemCopperIngot), 0);
		GameRegistry.addSmelting(oreTinOre, new ItemStack(itemTinIngot), 0);
		GameRegistry.addSmelting(oreZincOre, new ItemStack(itemZincIngot), 0);
		
//Crafting Recipes
	//Shaped
		//Output multiple: new ItemStack (itemExampleItem, X) X= Number of output.
		GameRegistry.addShapedRecipe(new ItemStack(blockCopperBlock), new Object[]{ "XXX", "XXX", "XXX", 'X', itemCopperIngot});
		GameRegistry.addShapedRecipe(new ItemStack(blockTinBlock), new Object[]{ "XXX", "XXX", "XXX", 'X', itemTinIngot});
		GameRegistry.addShapedRecipe(new ItemStack(blockZincBlock), new Object[]{ "XXX", "XXX", "XXX", 'X', itemZincIngot});
	
	//Durable Items
		GameRegistry.addShapedRecipe(new ItemStack(itemIronDisk, 4), new Object[] {"IH", 'I', Items.iron_ingot, 'H', new ItemStack (itemIronHammer, 1, OreDictionary.WILDCARD_VALUE)});
		GameRegistry.addShapedRecipe(new ItemStack(itemIronWasher), new Object[] {"DP", 'D', itemIronDisk, 'P', new ItemStack (itemIronPunch, 1, OreDictionary.WILDCARD_VALUE)});
	
	//Shapeless
		//Multiple inputs: {input1, input2, input3}
		GameRegistry.addShapelessRecipe(new ItemStack(itemCopperIngot), new Object[]{blockCopperBlock});
			
//Fuel Handler
		GameRegistry.registerFuelHandler(new FuelHandler());
	}
	
	@EventHandler
	public void PostInit(FMLPostInitializationEvent postEvent){
		
	}
}
